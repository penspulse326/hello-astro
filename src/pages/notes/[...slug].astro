---
import Layout from '../../layouts/default-layout.astro';
import NotesSidebar from '../../components/notes/sidebar.astro';
import TableOfContents from '../../components/notes/table-of-contents.astro';
import { getAllNotes, getNavigation } from '../../utils/notes';
import type { NoteEntry } from '../../utils/notes';

export function getStaticPaths() {
  const allNotes = getAllNotes();
  return allNotes.map((note) => ({
    params: { slug: note.id },
    props: { note },
  }));
}

const { note } = Astro.props as { note: NoteEntry };

if (!note) {
  // This case should not be reached in static generation
  return Astro.redirect('/404');
}

const navigation = getNavigation();
const activeId = note.id;
const pageTitle = `${note.frontmatter.title} | 研究筆記`;
const headings = await note.getHeadings();
---

<Layout title={pageTitle} description={note.frontmatter.description}>
  <div class="container pt-0 pt-lg-5 pb-5">
    <div class="row g-4">
      <div class="col-lg-3">
        <NotesSidebar navigation={navigation} activeId={activeId} />
      </div>
      <div class="col-lg-9">
        <div class="row g-4">
          <div class="col-lg-9">
            <article class="notes-article px-2 px-lg-0">
              <header class="mb-4">
                <h1 class="display-6 fw-bold mb-3">{note.frontmatter.title}</h1>
                <div class="d-flex flex-wrap align-items-center gap-3">
                  {
                    note.frontmatter.date && (
                      <time datetime={note.frontmatter.date.toISOString()} class="notes-article__meta text-secondary">
                        {note.frontmatter.date.toLocaleDateString('zh-TW')}
                      </time>
                    )
                  }
                  {
                    note.frontmatter.tags && note.frontmatter.tags.length > 0 && (
                      <ul class="list-unstyled d-flex flex-wrap gap-2 mb-0">
                        {note.frontmatter.tags.map((tag) => (
                          <li>
                            <span class="badge text-bg-light border">#{tag}</span>
                          </li>
                        ))}
                      </ul>
                    )
                  }
                </div>
              </header>
              <TableOfContents headings={headings} variant="mobile" />
              <div class="markdown-body">
                <note.Content />
              </div>
            </article>
          </div>
          <div class="col-lg-3 d-none d-lg-block">
            <TableOfContents headings={headings} variant="desktop" />
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  .notes-article {
    background-color: var(--bs-body-bg);
  }

  .notes-article__meta {
    font-size: 0.9rem;
    letter-spacing: 0.05em;
  }
</style>
