---
import type { CategoryWithNotes, CategoryNoteItem } from '../../utils/notes';

interface Props {
  notesNavigation: CategoryWithNotes[];
  activeNoteId?: string;
}

const { notesNavigation, activeNoteId } = Astro.props as Props;

const sanitizeId = (value: string) => value.replace(/[^a-zA-Z0-9_-]/g, '-');
---

<div id="notes-menu-container">
  <button
    id="back-to-main-menu"
    type="button"
    class="btn btn-link text-decoration-none p-2 mb-3 fw-semibold w-100 text-start bg-body-secondary mt-n3 rounded-0"
  >
    <i class="bi bi-arrow-left me-1"></i>
    回到主選單
  </button>
  <div class="notes-drawer">
    <div class="accordion accordion-flush mx-1 mx-lg-0" id="notesDrawerAccordion">
      {
        notesNavigation.map((category: CategoryWithNotes) => {
          const sectionId = `notes-drawer-${sanitizeId(category.id)}`;
          const collapseId = `${sectionId}-collapse`;
          const headingId = `${sectionId}-heading`;
          const isExpanded = category.notes.some((note: CategoryNoteItem) => note.id === activeNoteId);

          return (
            <div class="accordion-item border-0 border-bottom">
              <h2 class="accordion-header" id={headingId}>
                <button
                  class:list={{
                    'accordion-button': true,
                    collapsed: !isExpanded,
                  }}
                  type="button"
                  data-bs-toggle="collapse"
                  data-bs-target={`#${collapseId}`}
                  aria-expanded={isExpanded}
                  aria-controls={collapseId}
                >
                  {category.label}
                </button>
              </h2>
              <div
                id={collapseId}
                class:list={{
                  'accordion-collapse collapse': true,
                  show: isExpanded,
                }}
                aria-labelledby={headingId}
              >
                <div class="accordion-body pt-2 pb-3">
                  <ul class="list-unstyled m-0">
                    {category.notes.map((note: CategoryNoteItem) => (
                      <li class="notes-drawer-item">
                        <a
                          class:list={{
                            'notes-drawer-link': true,
                            active: note.id === activeNoteId,
                          }}
                          href={note.url}
                          data-bs-dismiss="offcanvas"
                        >
                          {note.title}
                        </a>
                      </li>
                    ))}
                  </ul>
                </div>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</div>

<script define:vars={{ activeNoteId }}>
  const offcanvasElement = document.getElementById('offcanvasNavbar');
  const mainContainer = document.getElementById('main-menu-container');
  const notesContainer = document.getElementById('notes-menu-container');
  const backButton = document.getElementById('back-to-main-menu');

  if (offcanvasElement && mainContainer && notesContainer && backButton) {
    offcanvasElement.addEventListener('show.bs.offcanvas', () => {
      // Default to notes menu when opening
      notesContainer.classList.remove('d-none');
      mainContainer.classList.add('d-none');
    });

    backButton.addEventListener('click', () => {
      // Switch to main menu
      notesContainer.classList.add('d-none');
      mainContainer.classList.remove('d-none');
    });
  }
</script>

<style>
  .notes-drawer {
    max-height: calc(100vh - 200px);
    overflow-y: auto;
    padding-right: 0;
  }

  .notes-drawer-item {
    margin-bottom: 0.25rem;
  }

  .notes-drawer-link {
    color: var(--bs-body-color);
    display: block;
    padding: 0.25rem 0.5rem;
    text-decoration: none;
    border-radius: 0.25rem;
    transition: all 0.2s ease-in-out;
  }

  .notes-drawer-link:hover,
  .notes-drawer-link.active {
    background-color: var(--bs-primary-bg-subtle);
    color: var(--bs-primary);
  }

  .notes-drawer-link.active {
    font-weight: 500;
  }

  .accordion-button {
    padding: 0.75rem 0;
  }
</style>
